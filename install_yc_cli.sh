#!/bin/bash

# Yandex Cloud CLI Installer
# –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –¥–ª—è Linux, macOS –∏ Windows (WSL/Git Bash)
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—É—é —Å–∏—Å—Ç–µ–º—É –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –≤–µ—Ä—Å–∏—é

set -e  # –í—ã—Ö–æ–¥ –ø—Ä–∏ –ª—é–±–æ–π –æ—à–∏–±–∫–µ

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ü–≤–µ—Ç–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞
print_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

print_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

print_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
detect_os() {
    if [[ "$OSTYPE" == "linux-gnu"* ]]; then
        # Linux
        if [ -f /etc/os-release ]; then
            . /etc/os-release
            OS=$NAME
            VER=$VERSION_ID
        elif type lsb_release >/dev/null 2>&1; then
            OS=$(lsb_release -si)
            VER=$(lsb_release -sr)
        elif [ -f /etc/lsb-release ]; then
            . /etc/lsb-release
            OS=$DISTRIB_ID
            VER=$DISTRIB_RELEASE
        elif [ -f /etc/debian_version ]; then
            OS=Debian
            VER=$(cat /etc/debian_version)
        elif [ -f /etc/redhat-release ]; then
            OS=RedHat
            VER=$(cat /etc/redhat-release)
        else
            OS=$(uname -s)
            VER=$(uname -r)
        fi
    elif [[ "$OSTYPE" == "darwin"* ]]; then
        # macOS
        OS="macOS"
        VER=$(sw_vers -productVersion)
    elif [[ "$OSTYPE" == "cygwin" ]]; then
        # POSIX compatibility layer and Linux environment emulation for Windows
        OS="Windows"
        VER="Cygwin"
    elif [[ "$OSTYPE" == "msys" ]]; then
        # Lightweight shell and GNU utilities compiled for Windows (part of MinGW)
        OS="Windows"
        VER="MSYS"
    elif [[ "$OSTYPE" == "win32" ]]; then
        # I'm not sure this can happen.
        OS="Windows"
        VER="Win32"
    elif [[ "$OSTYPE" == "freebsd"* ]]; then
        # FreeBSD
        OS="FreeBSD"
        VER=$(uname -r)
    else
        # Unknown.
        OS="Unknown"
        VER="Unknown"
    fi
    
    print_info "–û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –û–°: $OS $VER"
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–ª–∏—á–∏—è –∫–æ–º–∞–Ω–¥—ã
command_exists() {
    command -v "$1" >/dev/null 2>&1
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –Ω–∞ Ubuntu/Debian
install_deps_ubuntu() {
    print_info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –¥–ª—è Ubuntu/Debian..."
    
    # –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –ø–∞–∫–µ—Ç–æ–≤
    if command_exists sudo; then
        sudo apt-get update
    else
        apt-get update
    fi
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞–∫–µ—Ç—ã
    local packages="curl wget gnupg2 software-properties-common apt-transport-https ca-certificates"
    
    if command_exists sudo; then
        sudo apt-get install -y $packages
    else
        apt-get install -y $packages
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –Ω–∞ RedHat/CentOS/Fedora
install_deps_redhat() {
    print_info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –¥–ª—è RedHat/CentOS/Fedora..."
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–∞–∫–µ—Ç–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä
    if command_exists dnf; then
        PKG_MANAGER="dnf"
    elif command_exists yum; then
        PKG_MANAGER="yum"
    else
        print_error "–ù–µ –Ω–∞–π–¥–µ–Ω –ø–∞–∫–µ—Ç–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä (yum/dnf)"
        exit 1
    fi
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞–∫–µ—Ç—ã
    local packages="curl wget gnupg2 ca-certificates"
    
    if command_exists sudo; then
        sudo $PKG_MANAGER install -y $packages
    else
        $PKG_MANAGER install -y $packages
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞ macOS
install_macos() {
    print_info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Yandex Cloud CLI –Ω–∞ macOS..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Homebrew
    if command_exists brew; then
        print_info "–ò—Å–ø–æ–ª—å–∑—É–µ–º Homebrew –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏..."
        brew install yandex-cloud-cli
        return 0
    fi
    
    # –ï—Å–ª–∏ Homebrew –Ω–µ—Ç, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Ä—É—á–Ω—É—é
    print_info "Homebrew –Ω–µ –Ω–∞–π–¥–µ–Ω, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Ä—É—á–Ω—É—é..."
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É
    ARCH=$(uname -m)
    if [[ "$ARCH" == "arm64" ]]; then
        DOWNLOAD_URL="https://storage.yandexcloud.net/yandexcloud-yc/release/0.112.0/darwin/arm64/yc"
    else
        DOWNLOAD_URL="https://storage.yandexcloud.net/yandexcloud-yc/release/0.112.0/darwin/amd64/yc"
    fi
    
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏
    INSTALL_DIR="$HOME/.local/bin"
    mkdir -p "$INSTALL_DIR"
    
    # –°–∫–∞—á–∏–≤–∞–µ–º –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º
    print_info "–°–∫–∞—á–∏–≤–∞–Ω–∏–µ yc CLI..."
    curl -sSL "$DOWNLOAD_URL" -o "$INSTALL_DIR/yc"
    chmod +x "$INSTALL_DIR/yc"
    
    # –î–æ–±–∞–≤–ª—è–µ–º –≤ PATH
    add_to_path "$INSTALL_DIR"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞ Ubuntu/Debian
install_ubuntu() {
    print_info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Yandex Cloud CLI –Ω–∞ Ubuntu/Debian..."
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    install_deps_ubuntu
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π Yandex Cloud
    curl -sSL https://storage.yandexcloud.net/yandexcloud-yc/install.sh | bash
    
    # –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å
    if [ -f "$HOME/.bashrc" ]; then
        source "$HOME/.bashrc"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞ RedHat/CentOS/Fedora
install_redhat() {
    print_info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Yandex Cloud CLI –Ω–∞ RedHat/CentOS/Fedora..."
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    install_deps_redhat
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫
    curl -sSL https://storage.yandexcloud.net/yandexcloud-yc/install.sh | bash
    
    # –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å
    if [ -f "$HOME/.bashrc" ]; then
        source "$HOME/.bashrc"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞ Windows (WSL/Git Bash/MSYS)
install_windows() {
    print_info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Yandex Cloud CLI –Ω–∞ Windows..."
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É
    if [[ $(uname -m) == "x86_64" ]]; then
        ARCH="amd64"
    else
        ARCH="386"
    fi
    
    # URL –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
    DOWNLOAD_URL="https://storage.yandexcloud.net/yandexcloud-yc/release/0.112.0/windows/$ARCH/yc.exe"
    
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏
    INSTALL_DIR="$HOME/.local/bin"
    mkdir -p "$INSTALL_DIR"
    
    # –°–∫–∞—á–∏–≤–∞–µ–º –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º
    print_info "–°–∫–∞—á–∏–≤–∞–Ω–∏–µ yc CLI..."
    if command_exists curl; then
        curl -sSL "$DOWNLOAD_URL" -o "$INSTALL_DIR/yc.exe"
    elif command_exists wget; then
        wget -q "$DOWNLOAD_URL" -O "$INSTALL_DIR/yc.exe"
    else
        print_error "–ù–µ –Ω–∞–π–¥–µ–Ω curl –∏–ª–∏ wget –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è"
        exit 1
    fi
    
    chmod +x "$INSTALL_DIR/yc.exe"
    
    # –î–æ–±–∞–≤–ª—è–µ–º –≤ PATH
    add_to_path "$INSTALL_DIR"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –≤ PATH
add_to_path() {
    local dir="$1"
    local shell_rc=""
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ñ–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ shell
    if [ -n "$ZSH_VERSION" ]; then
        shell_rc="$HOME/.zshrc"
    elif [ -n "$BASH_VERSION" ]; then
        shell_rc="$HOME/.bashrc"
    else
        shell_rc="$HOME/.profile"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –ø—É—Ç—å –≤ PATH
    if [[ ":$PATH:" != *":$dir:"* ]]; then
        print_info "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ $dir –≤ PATH..."
        echo "export PATH=\"$dir:\$PATH\"" >> "$shell_rc"
        export PATH="$dir:$PATH"
        print_success "–ü—É—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω –≤ $shell_rc"
    else
        print_info "–ü—É—Ç—å $dir —É–∂–µ –µ—Å—Ç—å –≤ PATH"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
verify_installation() {
    print_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏..."
    
    # –û–±–Ω–æ–≤–ª—è–µ–º PATH –¥–ª—è —Ç–µ–∫—É—â–µ–π —Å–µ—Å—Å–∏–∏
    if [ -f "$HOME/.bashrc" ]; then
        source "$HOME/.bashrc" 2>/dev/null || true
    fi
    if [ -f "$HOME/.zshrc" ]; then
        source "$HOME/.zshrc" 2>/dev/null || true
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–º–∞–Ω–¥—É yc
    if command_exists yc; then
        local version=$(yc version 2>/dev/null || echo "unknown")
        print_success "Yandex Cloud CLI —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ!"
        print_info "–í–µ—Ä—Å–∏—è: $version"
        
        print_info "–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:"
        echo "  yc init"
        echo ""
        print_info "–ò–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Ç–æ–∫–µ–Ω –∏ folder-id:"
        echo "  export YC_TOKEN=your_token"
        echo "  export YC_FOLDER_ID=your_folder_id"
        
        return 0
    else
        print_error "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å –∏–ª–∏ yc –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ PATH"
        print_warning "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Ä–º–∏–Ω–∞–ª –∏–ª–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç—å:"
        echo "  source ~/.bashrc"
        echo "  # –∏–ª–∏"
        echo "  source ~/.zshrc"
        return 1
    fi
}

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    echo "üå©Ô∏è  Yandex Cloud CLI Installer"
    echo "=================================="
    echo ""
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –û–°
    detect_os
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ —É–∂–µ yc
    if command_exists yc; then
        local version=$(yc version 2>/dev/null || echo "unknown")
        print_warning "Yandex Cloud CLI —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (–≤–µ—Ä—Å–∏—è: $version)"
        read -p "–•–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å? (y/N): " -n 1 -r
        echo
        if [[ ! $REPLY =~ ^[Yy]$ ]]; then
            print_info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞"
            exit 0
        fi
    fi
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –û–°
    case "$OS" in
        "Ubuntu"|"Debian"*|"Linux Mint")
            install_ubuntu
            ;;
        "Red Hat"*|"CentOS"*|"Fedora"*|"Rocky"*|"AlmaLinux"*)
            install_redhat
            ;;
        "macOS")
            install_macos
            ;;
        "Windows")
            install_windows
            ;;
        *)
            print_warning "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –û–°: $OS"
            print_info "–ü–æ–ø—ã—Ç–∫–∞ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏..."
            
            # –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ —á–µ—Ä–µ–∑ —Å–∫—Ä–∏–ø—Ç
            if command_exists curl; then
                curl -sSL https://storage.yandexcloud.net/yandexcloud-yc/install.sh | bash
            else
                print_error "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Å–ø–æ—Å–æ–± —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –¥–ª—è –≤–∞—à–µ–π –û–°"
                print_info "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Ä—É—á–Ω—É—é:"
                echo "  https://cloud.yandex.ru/docs/cli/quickstart"
                exit 1
            fi
            ;;
    esac
    
    echo ""
    verify_installation
}

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
main "$@" 